  <div class="container-fluid page__heading-container">
    <div class="page__heading d-flex align-items-center">
      <div class="flex">
        <nav aria-label="breadcrumb">
          <ol class="breadcrumb mb-0">
            <li class="breadcrumb-item"><a href="<%= root_path %>">Accueil</a></li>
            <li class="breadcrumb-item active" aria-current="page">Tableau de bord</li>
          </ol>
        </nav>
        <h1 class="mt-3">Tableau de bord</h1>
      </div>
      <a href="<%= new_quote_path %>" class="btn btn-primary ml-3">Nouveau devis</a>
    </div>
  </div>

  <div class="row card-group-row">
    <div class="col-lg-4 col-md-6 card-group-row__col">
      <div class="card card-group-row__card card-body card-body-x-lg flex-row align-items-center">
        <div class="flex">
          <div class="card-header__title text-muted mb-2">Chiffre d'affaire annuel</div>
          <div class="text-amount text-success"><%= number_to_currency(get_annual_turnover(@paid_invoices), :locale => :fr) %></div>
        </div>
        <div><i class="material-icons icon-muted icon-40pt ml-3">gps_fixed</i></div>
      </div>
    </div>
    <div class="col-lg-4 col-md-6 card-group-row__col">
      <div class="card card-group-row__card card-body card-body-x-lg flex-row align-items-center">
        <div class="flex">
          <div class="card-header__title text-muted mb-2">Chiffre d'affaire mensuel</div>
          <div class="text-amount text-success"><%= number_to_currency(get_monthly_turnover(@paid_invoices), :locale => :fr) %></div>
        </div>
        <div><i class="material-icons icon-muted icon-40pt ml-3">monetization_on</i></div>
      </div>
    </div>
    <div class="col-lg-4 col-md-12 card-group-row__col">
      <div class="card card-group-row__card card-body card-body-x-lg flex-row align-items-center">
        <div class="flex">
          <div class="card-header__title text-muted mb-2">Nombre de factures en attente</div>
          <div class="text-amount text-danger"><%= @unpayed_invoices %></div>
        </div>
        <div><i class="material-icons icon-muted icon-40pt ml-3">perm_identity</i></div>
      </div>
    </div>
  </div>

  <div class="card">
    <div class="card-header card-header-large bg-white">
      <h4 class="card-header__title">Mon CA - Année 2020</h4>
    </div>
    <div class="card-body">
      <div class="chart">
        <canvas id="performanceAreaChart" class="chart-canvas"></canvas>
      </div>
    </div>
  </div>

  <div class="card">
    <div class="card-header card-header-large bg-white">
      <h4 class="card-header__title">Mes Devis/Factures - Juin 2020</h4>
    </div>
    <div class="card-body">
      <div class="chart">
        <canvas id="devicesChart" class="chart-canvas"></canvas>
      </div>
    </div>
  </div>


<% content_for :footer_scripts do %>

  <!-- Chart.js Samples -->
  <script>
      (function(){
          'use strict';

          Charts.init()

          var Performance = function(id, type = 'line', options = {}) {
              options = Chart.helpers.merge({
                  scales: {
                      yAxes: [{
                          ticks: {
                              callback: function(a) {
                                  if (!(a % 10))
                                      return a + "00€"
                              }
                          }
                      }]
                  },
                  tooltips: {
                      callbacks: {
                          label: function(a, e) {
                              var t = e.datasets[a.datasetIndex].label || "",
                                  o = a.yLabel,
                                  r = "";
                              return 1 < e.datasets.length && (r += '<span class="popover-body-label mr-auto">' + t + "</span>"), r += '<span class="popover-body-value">' + o + "00€</span>"
                          }
                      }
                  }
              }, options)

              var data = {
                  labels: ["Jan", "Fev", "Mar", "Avr", "Mai", "Jui"],
                  datasets: [{
                      label: "Performance",
                      data: [6, 14, 5, 9, 12, 16]
                  }]
              }

              Charts.create(id, type, options, data)
          }

          var Orders = function(id, type = 'roundedBar', options = {}) {
              options = Chart.helpers.merge({
                  barRoundness: 1.2,
                  scales: {
                      yAxes: [{
                          ticks: {
                              callback: function(a) {
                                  if (!(a % 10))
                                      return a + "k€"
                              }
                          }
                      }]
                  },
                  tooltips: {
                      callbacks: {
                          label: function(a, e) {
                              var t = e.datasets[a.datasetIndex].label || "",
                                  o = a.yLabel,
                                  r = "";
                              return 1 < e.datasets.length && (r += '<span class="popover-body-label mr-auto">' + t + "</span>"), r += '<span class="popover-body-value">' + o + "k€</span>"
                          }
                      }
                  }
              }, options)

              var data = {
                  labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                  datasets: [{
                      label: "Sales",
                      data: [25, 20, 30, 22, 17, 10, 18, 26, 28, 26, 20, 32]
                  }]
              }

              Charts.create(id, type, options, data)
          }

          var Devices = function(id, type = 'doughnut', options = {}) {
              options = Chart.helpers.merge({
                  tooltips: {
                      callbacks: {
                          title: function(a, e) {
                              return e.labels[a[0].index]
                          },
                          label: function(a, e) {
                              var t = "";
                              return t += '<span class="popover-body-value">' + e.datasets[0].data[a.index] + "</span>"
                          }
                      }
                  }
              }, options)

              var data = {
                  labels: ["Devis", "Factures"],
                  datasets: [{
                      data: [10, 2],
                      backgroundColor: [settings.colors.primary[700], settings.colors.success[300], settings.colors.success[100]],
                      hoverBorderColor: "dark" == settings.charts.colorScheme ? settings.colors.gray[800] : settings.colors.white
                  }]
              }

              Charts.create(id, type, options, data)
          }

          ///////////////////
          // Create Charts //
          ///////////////////

          Performance('#performanceChart')

          Performance('#performanceAreaChart', 'line', {
              elements: {
                  line: {
                      fill: 'start',
                      backgroundColor: settings.charts.colors.area
                  }
              }
          })

          Orders('#ordersChart')

          Orders('#ordersChartSwitch')

          Devices('#devicesChart')

          $('[data-toggle="chart"]:checked').each(function (index, el) {
              Charts.add($(el))
          })

      })()
  </script>
<% end %>
